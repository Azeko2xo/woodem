# vim:syntax=python
Import('*')
linkPlugins=env['linkPlugins']

if 'opengl' in env['features']:
	env.Install('$PREFIX/lib/yade$SUFFIX/gui',[
		env.SharedLibrary('QtGUI',
			['qt3/FileDialog.cpp',
				'qt3/GLViewer.cpp',
				'qt3/MessageDialog.cpp',
				'qt3/QtFileGenerator.cpp',
				'qt3/QtGUI.cpp',
				'qt3/QtGUIPreferences.cpp',
				'qt3/SimulationController.cpp',
				'qt3/YadeQtMainWindow.cpp',
				'qt3/YadeCamera.cpp',
				'qt3/QtGeneratedSimulationController.ui',
				'qt3/QtGeneratedMessageDialog.ui',
				'qt3/YadeQtGeneratedMainWindow.ui',
				'qt3/QtFileGeneratorController.ui'],
			LIBS=['PythonUI',
				'yade-serialization-qt',
				linkPlugins(['GravityEngines','OpenGLRenderingEngine']),
				'$QGLVIEWER_LIB'],
			CPPPATH=env['CPPPATH']+['qt3']
		),
		env.SharedLibrary('SnapshotEngine',['qt3/SnapshotEngine.cpp'],LIBS=env['LIBS']+['QtGUI','$QGLVIEWER_LIB'],CPPPATH=env['CPPPATH']+['qt3']),
	])

	env.Install('$PREFIX/lib/yade$SUFFIX/py/yade',[
		env.SharedLibrary('_qt',['qt3/QtGUI-python.cpp'],SHLIBPREFIX='',LIBS=['QtGUI'],CPPPATH=env['CPPPATH']+[env['buildDir']+'/gui/qt3']), # CPPPATH is for files generated by moc which are indirectly included
		env.File('qt.py','qt3'),
	])

	###
	### HACK that works around https://bugs.launchpad.net/yade/+bug/406343
	### (not clear why scons is not picking up the dependency automatically, though)
	###
	#gens=['$buildDir/gui/qt3/'+h for h in 'QtGeneratedSimulationController.h','QtGeneratedMessageDialog.h','YadeQtGeneratedMainWindow.h','QtFileGeneratorController.h']
	#env.Depends(['qt3/FileDialog.cpp','qt3/GLViewer.cpp','qt3/MessageDialog.cpp','qt3/QtFileGenerator.cpp','qt3/QtGUI.cpp','qt3/QtGUIPreferences.cpp','qt3/SimulationController.cpp','qt3/YadeQtMainWindow.cpp','qt3/YadeCamera.cpp'],gens)

import os.path

env.Install('$PREFIX/lib/yade$SUFFIX/gui',[
	env.SharedLibrary('PythonUI',['py/PythonUI.cpp'],LIBS=env['LIBS']+linkPlugins([])),
	env.File('PythonUI_rc.py','py'),
])
# env.InstallAs('$PREFIX/bin/yade$SUFFIX-multi',env.File('yade-multi','py'))

# these modules will not be imported directly (probably)
# the rest was moved to py/ directory
env.Install('$PREFIX/lib/yade$SUFFIX/py/yade',[
	env.File('runtime.py','py'),
	env.File('ipython.py','py'),
])


