#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1
export VERSION=`cat VERSION`
export _VERSION=-${VERSION}


### eudoxos: FIXME: need to pass this to scons
#CFLAGS = -Wall -g
#
#ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
#	CFLAGS += -O0
#else
#	CFLAGS += -O2
#endif

configure: configure-stamp
configure-stamp:
	dh_testdir
	# eudoxos: all configuration done automatically when compiling & installing
	touch configure-stamp
build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	#$(MAKE)
	## eudoxos: noting to be done here, will be done at the same time as installation
	docbook-to-man debian/yade.sgml > yade.1
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	## eudoxos: FIXME: scons skips config when cleaning and doesn't know where it built anything
	dh_testdir
	# scons clean
	## remove builddirs and installation directories
	rm -rf debian/build-* `find debian/ -name 'yade-*' -type d`
	rm -rf doc/sphinx/_build
	rm -rf tags
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	##TMP dh_clean -k 
	dh_installdirs
	## files VERSION and _VERSION contain snapshot version without/with leading '-' respectively (like svn1113 and -svn1113)
	### WARNING: !!!! with jobs>1, fakeroot may hang; 2 workarounds:
	###   (a) use fakeroot-tcp instead of fakeroot
	###   (b) use just 1 job
	#debug build
	NO_SCONS_GET_RECENT= scons profile=deb buildPrefix=debian runtimePREFIX=/usr version=${VERSION} brief=0 chunkSize=8 jobs=1 linkStrategy=monolithic features=vtk,gts,log4cxx,opengl,openmp PREFIX=debian/yade${_VERSION}-dbg/usr variant=-dbg optimize=0 march= debug=1 CPPPATH=/usr/include/vtk-5.0:/usr/include/vtk-5.2:/usr/include/vtk-5.4:/usr/include/eigen2
	#optimized build
	NO_SCONS_GET_RECENT= scons profile=deb PREFIX=debian/yade${_VERSION}/usr variant='' optimize=1 debug=0
	#install platform-independent files (docs, scripts, examples)
	#NO_SCONS_GET_RECENT= scons profile=deb PREFIX=debian/yade${_VERSION}/usr debian/yade${_VERSION}/usr/share/doc/yade${_VERSION}-doc
	mkdir -p debian/yade${_VERSION}/usr/share/doc/yade${_VERSION}-doc
	cp -r examples scripts debian/yade${_VERSION}/usr/share/doc/yade${_VERSION}-doc
	# UGLY! generate sphinx docs only if python-sphinx is installed (distinguishes distributions which should build it or not as per debian/control-template build-deps)
	if [ "`dpkg -l python-sphinx |grep -e '^ii'`" ]; then cd doc/sphinx; ../../scripts/yade-exec-wrapper debian/yade${_VERSION}/usr/bin/yade${_VERSION} yadeSphinx.py; cp -r _build/html  debian/yade${_VERSION}/usr/share/doc/yade${_VERSION}-doc/html; else echo "Not building HTML documentation, since the python-sphinx package is not installed"; fi


check: install
	dh_testdir
	dh_testroot
	scripts/yade-exec-wrapper debian/yade${_VERSION}-dbg/usr/bin/yade${_VERSION}-dbg -x scripts/regression-tests.py
	scripts/yade-exec-wrapper debian/yade${_VERSION}/usr/bin/yade${_VERSION} -x scripts/regression-tests.py

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
## check added by eudoxos
binary-arch: build install check
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip --exclude=yade${_VERSION}-dbg   # don't strip the debug package
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
