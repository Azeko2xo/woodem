#!/usr/bin/python
# encoding: utf-8
import sys,os.path,re,shutil,time
DISTRIBUTION=sys.argv[1] if len(sys.argv)>1 else 'unstable'
if os.path.exists('RELEASE'):
	VERSION=file('RELEASE').readline().strip()
	SNAPSHOT=''
	PRIORITY=int(10000*float(re.sub('[^0-9.]','',VERSION)))
	if re.match('^.*beta',VERSION): PRIORITY-=100
	if re.match('^.*rc[0-9]$',VERSION): PRIORITY-=100
elif os.path.exists('.bzr'):
	VERSION='bzr'+os.popen("LC_ALL=C bzr revno 2>/dev/null").readlines()[0][:-1]
	SNAPSHOT='-snapshot'
	PRIORITY=int(re.sub('[^0-9]','',VERSION))
else:
	raise RuntimeError('Revision could not be determined (RELEASE or .bzr)')
print 'version %s%s, priority %d'%(VERSION,SNAPSHOT,PRIORITY)
open('VERSION','w').write(VERSION+'\n')
_VERSION='-'+VERSION #used in templates

# control files
def copyReplace(f1,f2):
	"Copy file f1 to f2, evaluating all occurences of @...@ with eval(); they should expand to a string and can contain arbitrary python expressions."
	ff2=open(f2,'w')
	for l in open(f1):
		ff2.write(re.sub(r'@([^@]*)@',lambda m: str(eval(m.group(1))),l))
for f1,f2 in [
	('yade.postinst-template','yade-%s.postinst'%VERSION),
	('yade-dbg.postinst-template','yade-%s-dbg.postinst'%VERSION),
	('yade.prerm-template','yade-%s.prerm'%VERSION),
	('yade-dbg.prerm-template','yade-%s-dbg.prerm'%VERSION),
	('control-template','control')]:
		copyReplace('debian/'+f1,'debian/'+f2)

# write debian/changelog
open('debian/changelog','w').write(
'''yade-%s (1~%s) %s; urgency=low

  * Automatic debian changelog entry for yade-%s

 -- Václav Šmilauer <eudoxos@arcig.cz>  %s
'''%(VERSION,DISTRIBUTION,DISTRIBUTION,VERSION,time.strftime("%a, %d %b %Y %H:%M:%S +0000",time.gmtime())))

# remove some generated files
for p in ('doc/doxygen','doc/sphinx/_build','tags'):
	if not os.path.exists(p): continue
	if os.path.isdir(p): shutil.rmtree(p)
	else: os.remove(p)
