# vim: set filetype=python :
Import('*')
env.Install('$PREFIX/lib/yade$SUFFIX/pkg-common',[

	env.SharedLibrary('ParallelEngine',
		['Engine/ParallelEngine.cpp']),

	env.SharedLibrary('BodyAssocVector',
		['Container/BodyAssocVector.cpp'],
		LIBS=env['LIBS']+['yade-base']),

	env.SharedLibrary('InteractionHashMap',
		['Container/InteractionHashMap.cpp'],
		LIBS=env['LIBS']+['yade-base']),
	
	env.SharedLibrary('InteractionVecMap',
		['Container/InteractionVecMap.cpp'],
		LIBS=env['LIBS']+['yade-base']),
	
## moved to core/DefaultContainerImplementations
#	env.SharedLibrary('BodyRedirectionVector',['Container/BodyRedirectionVector.cpp']),
#	env.SharedLibrary('InteractionVecSet',['Container/InteractionVecSet.cpp']),
#	env.SharedLibrary('PhysicalActionVectorVector',['Container/PhysicalActionVectorVector.cpp']),
## still permit linking with that
	env.SharedLibrary('BodyRedirectionVector',[]),
	env.SharedLibrary('InteractionVecSet',[]),
	env.SharedLibrary('PhysicalActionVectorVector',[]),

	env.SharedLibrary('AABB',['DataClass/BoundingVolume/AABB.cpp']),
	env.SharedLibrary('BoundingSphere',['DataClass/BoundingVolume/BoundingSphere.cpp']),
	env.SharedLibrary('InteractingBox',['DataClass/InteractingGeometry/InteractingBox.cpp'],),
	env.SharedLibrary('InteractingSphere',['DataClass/InteractingGeometry/InteractingSphere.cpp']),
	env.SharedLibrary('InteractingNode',['DataClass/InteractingGeometry/InteractingNode.cpp']),
	env.SharedLibrary('MetaInteractingGeometry',['DataClass/InteractingGeometry/MetaInteractingGeometry.cpp']),
	env.SharedLibrary('InteractingFacet',['DataClass/InteractingGeometry/InteractingFacet.cpp']),
	env.SharedLibrary('ParticleParameters',['DataClass/PhysicalParameters/ParticleParameters.cpp']),
	env.SharedLibrary('RigidBodyParameters',['DataClass/PhysicalParameters/RigidBodyParameters.cpp'],
		LIBS=env['LIBS']+['ParticleParameters',]),
	env.SharedLibrary('ElasticBodyParameters',['DataClass/PhysicalParameters/ElasticBodyParameters.cpp'],
		LIBS=env['LIBS']+['RigidBodyParameters','ParticleParameters',]),
	env.SharedLibrary('ClosestFeatures',['DataClass/InteractionGeometry/ClosestFeatures.cpp']),
	env.SharedLibrary('Force',['DataClass/PhysicalAction/Force.cpp']),
	env.SharedLibrary('Momentum',['DataClass/PhysicalAction/Momentum.cpp']),
	env.SharedLibrary('Box',['DataClass/GeometricalModel/Box.cpp']),
	env.SharedLibrary('Mesh2D',['DataClass/GeometricalModel/Mesh2D.cpp']),
	env.SharedLibrary('Sphere',['DataClass/GeometricalModel/Sphere.cpp']),
	env.SharedLibrary('Tetrahedron',['DataClass/GeometricalModel/Tetrahedron.cpp']),
	env.SharedLibrary('Quadrilateral',['DataClass/GeometricalModel/Quadrilateral.cpp']),
	env.SharedLibrary('Facet',['DataClass/GeometricalModel/Facet.cpp']),
	env.SharedLibrary('MomentEngine',['Engine/DeusExMachina/MomentEngine.cpp'],
		LIBS=env['LIBS']+['Momentum','ParticleParameters']),
	env.SharedLibrary('ForceEngine',['Engine/DeusExMachina/ForceEngine.cpp'],
		LIBS=env['LIBS']+['Force','ParticleParameters']),
	env.SharedLibrary('DisplacementToForceEngine',['Engine/DeusExMachina/DisplacementToForceEngine.cpp'],
		LIBS=env['LIBS']+['Force','ParticleParameters']),
	env.SharedLibrary('GravityEngines',['Engine/DeusExMachina/GravityEngines.cpp'],
		LIBS=env['LIBS']+['Force','ParticleParameters']),
	env.SharedLibrary('JumpChangeSe3',['Engine/DeusExMachina/JumpChangeSe3.cpp'], LIBS=env['LIBS']+['RigidBodyParameters']),
	env.SharedLibrary('Se3Interpolator',['Engine/DeusExMachina/Se3Interpolator.cpp'], LIBS=env['LIBS']+['RigidBodyParameters']),
	env.SharedLibrary('RotationEngine',['Engine/DeusExMachina/RotationEngine.cpp'],
		LIBS=env['LIBS']+['ParticleParameters','RigidBodyParameters','Shop']),
	env.SharedLibrary('TranslationEngine',['Engine/DeusExMachina/TranslationEngine.cpp'],
		LIBS=env['LIBS']+['ParticleParameters']),
	env.SharedLibrary('CinemDNCEngine',['Engine/DeusExMachina/CinemDNCEngine.cpp'],
		LIBS=env['LIBS']+['ParticleParameters','RigidBodyParameters']),

	env.SharedLibrary('CinemCNCEngine',
		['Engine/DeusExMachina/CinemCNCEngine.cpp'],
		LIBS=env['LIBS']+['yade-base',
			'ParticleParameters',
			'RigidBodyParameters',
			'yade-factory',
			'yade-base',
			'Force',
			'ContactLaw1',
			'ElasticContactInteraction',
			'InteractingBox',
			'yade-serialization',
			'yade-multimethods'],
		CPPPATH=env['CPPPATH']+['DataClass/PhysicalParameters',
			'$PREFIX/include',
			'Engine/DeusExMachina']),

	env.SharedLibrary('CinemKNCEngine',
		['Engine/DeusExMachina/CinemKNCEngine.cpp'],
		LIBS=env['LIBS']+['yade-base',
			'ParticleParameters',
			'RigidBodyParameters',
			'yade-factory',
			'yade-base',
			'Force',
			'ContactLaw1',
			'ElasticContactInteraction',
			'InteractingBox',
			'yade-serialization',
			'yade-multimethods'],
		CPPPATH=env['CPPPATH']+['DataClass/PhysicalParameters',
			'$PREFIX/include',
			'Engine/DeusExMachina']),


	env.SharedLibrary('StaticAttractionEngine',['Engine/DeusExMachina/StaticAttractionEngine.cpp'],
		CPPPATH=env['CPPPATH']+['$PREFIX/include','Engine/DeusExMachina']),
	env.SharedLibrary('DisplacementEngine',['Engine/DeusExMachina/DisplacementEngine.cpp']),
	env.SharedLibrary('FixedPositionEngine',['Engine/DeusExMachina/FixedPositionEngine.cpp']),
	env.SharedLibrary('FixedOrientationEngine',['Engine/DeusExMachina/FixedOrientationEngine.cpp']),
	env.SharedLibrary('ResetPositionEngine',['Engine/StandAloneEngine/ResetPositionEngine.cpp'],
		LIBS=env['LIBS']+['ParticleParameters']),
	env.SharedLibrary('FilterEngine',['Engine/FilterEngine/FilterEngine.cpp']),
	env.SharedLibrary('ColorizedLayerFilter',['Engine/FilterEngine/ColorizedLayerFilter.cpp'],
		LIBS=env['LIBS']+['FilterEngine']),
	env.SharedLibrary('ColorizedVelocityFilter',['Engine/FilterEngine/ColorizedVelocityFilter.cpp'],
		LIBS=env['LIBS']+['FilterEngine']),
	env.SharedLibrary('BoundingVolumeMetaEngine',['Engine/MetaEngine/BoundingVolumeMetaEngine.cpp']),
	env.SharedLibrary('GeometricalModelMetaEngine',['Engine/MetaEngine/GeometricalModelMetaEngine.cpp']),
	env.SharedLibrary('InteractingGeometryMetaEngine',['Engine/MetaEngine/InteractingGeometryMetaEngine.cpp']),
	env.SharedLibrary('PhysicalParametersMetaEngine',['Engine/MetaEngine/PhysicalParametersMetaEngine.cpp']),
	env.SharedLibrary('InteractionGeometryMetaEngine',['Engine/MetaEngine/InteractionGeometryMetaEngine.cpp']),
	env.SharedLibrary('InteractionPhysicsMetaEngine',['Engine/MetaEngine/InteractionPhysicsMetaEngine.cpp']),
	env.SharedLibrary('PhysicalActionApplier',['Engine/MetaEngine/PhysicalActionApplier.cpp']),
	env.SharedLibrary('PhysicalActionDamper',['Engine/MetaEngine/PhysicalActionDamper.cpp']),
	env.SharedLibrary('InteractingBox2AABB',['Engine/EngineUnit/InteractingBox2AABB.cpp'],
		LIBS=env['LIBS']+['BoundingVolumeMetaEngine','InteractingBox','AABB','Box',]),
	env.SharedLibrary('MetaInteractingGeometry2AABB',['Engine/EngineUnit/MetaInteractingGeometry2AABB.cpp'],
		LIBS=env['LIBS']+['BoundingVolumeMetaEngine','MetaInteractingGeometry','AABB']),
	env.SharedLibrary('InteractingFacet2AABB',['Engine/EngineUnit/InteractingFacet2AABB.cpp'],
		LIBS=env['LIBS']+['AABB','InteractingFacet']),
	env.SharedLibrary('LeapFrogOrientationIntegrator',['Engine/EngineUnit/LeapFrogOrientationIntegrator.cpp'],
		LIBS=env['LIBS']+['PhysicalParametersMetaEngine','ParticleParameters','RigidBodyParameters']),
	env.SharedLibrary('LeapFrogPositionIntegrator',['Engine/EngineUnit/LeapFrogPositionIntegrator.cpp'],
		LIBS=env['LIBS']+['PhysicalParametersMetaEngine','ParticleParameters','RigidBodyParameters']),
	env.SharedLibrary('NewtonsForceLaw',['Engine/EngineUnit/NewtonsForceLaw.cpp'],
		LIBS=env['LIBS']+['PhysicalActionApplier','Force','ParticleParameters','RigidBodyParameters']),
	env.SharedLibrary('NewtonsMomentumLaw',['Engine/EngineUnit/NewtonsMomentumLaw.cpp'],
		LIBS=env['LIBS']+['PhysicalActionApplier','Momentum','RigidBodyParameters',]),
	env.SharedLibrary('InteractingSphere2AABB',['Engine/EngineUnit/InteractingSphere2AABB.cpp'],
		LIBS=env['LIBS']+['BoundingVolumeMetaEngine','InteractingSphere','AABB']),
	env.SharedLibrary('CundallNonViscousDamping',
		['Engine/EngineUnit/CundallNonViscousDamping.cpp'],
		LIBS=env['LIBS']+['PhysicalActionDamper','Force','Momentum','ParticleParameters','RigidBodyParameters']),
	env.SharedLibrary('ElasticBodySimpleRelationship',['Engine/EngineUnit/ElasticBodySimpleRelationship.cpp'],
		LIBS=env['LIBS']+['ElasticBodyParameters','RigidBodyParameters','ParticleParameters','InteractionPhysicsMetaEngine','NormalShearInteractions']),
	env.SharedLibrary('NormalShearInteractions',['DataClass/InteractionPhysics/NormalShearInteractions.cpp']),

	#env.SharedLibrary('VelocityDamping',
	#	['Engine/EngineUnit/VelocityDamping.cpp'],
	#	LIBS=env['LIBS']+['Force','Momentum','RigidBodyParameters']),

	#env.SharedLibrary('PersistentTriangulationCollider',
	#	['Engine/StandAloneEngine/PersistentTriangulationCollider.cpp'],
	#	LIBPATH=env['LIBPATH']+['/home/bruno/micromacro/KdevMicroMacro/src'],
	#	LIBS=env['LIBS']+['yade-base', 'TesselationWrapper', 'CGAL',  'InteractingSphere', 'RigidBodyParameters'],
	#	CPPPATH=env['CPPPATH']+['Engine/StandAloneEngine', '$PREFIX/include', '/home/bruno/micromacro/KdevMicroMacro/src']),
    
	env.SharedLibrary('SpheresFactory',['Engine/StandAloneEngine/SpheresFactory.cpp'],
		LIBS=env['LIBS']+['AABB','InteractingSphere','InteractingFacet','Sphere','BodyMacroParameters','PersistentSAPCollider']),
	env.SharedLibrary('SpatialQuickSortCollider',['Engine/StandAloneEngine/SpatialQuickSortCollider.cpp']),
	env.SharedLibrary('PersistentSAPCollider',['Engine/StandAloneEngine/PersistentSAPCollider.cpp']),
	env.SharedLibrary('DistantPersistentSAPCollider',['Engine/StandAloneEngine/DistantPersistentSAPCollider.cpp']),
	env.SharedLibrary('SAPCollider',['Engine/StandAloneEngine/SAPCollider.cpp']),
	env.SharedLibrary('PhysicalActionContainerInitializer',['Engine/StandAloneEngine/PhysicalActionContainerInitializer.cpp']),
	env.SharedLibrary('PhysicalActionContainerReseter',['Engine/StandAloneEngine/PhysicalActionContainerReseter.cpp']),
	env.SharedLibrary('GLDrawAABB',['RenderingEngine/GLDrawBoundingVolume/GLDrawAABB.cpp'],
		LIBS=env['LIBS']+['yade-base','AABB','yade-opengl']),
	env.SharedLibrary('GLDrawBoundingSphere',['RenderingEngine/GLDrawBoundingVolume/GLDrawBoundingSphere.cpp'],
		LIBS=env['LIBS']+['yade-base','BoundingSphere','yade-opengl']),
	env.SharedLibrary('GLDrawTetrahedron',['RenderingEngine/GLDrawGeometricalModel/GLDrawTetrahedron.cpp'],
		LIBS=env['LIBS']+['yade-base','Tetrahedron','yade-opengl']),
	env.SharedLibrary('GLDrawBox',['RenderingEngine/GLDrawGeometricalModel/GLDrawBox.cpp'],
		LIBS=env['LIBS']+['yade-base','Box','yade-opengl']),
	env.SharedLibrary('GLDrawMesh2D',['RenderingEngine/GLDrawGeometricalModel/GLDrawMesh2D.cpp'],
		LIBS=env['LIBS']+['yade-base','Mesh2D','yade-opengl']),
	env.SharedLibrary('GLDrawSphere',['RenderingEngine/GLDrawGeometricalModel/GLDrawSphere.cpp'],
		LIBS=env['LIBS']+['yade-base','Sphere','yade-opengl']),               
	env.SharedLibrary('GLDrawQuadrilateral',['RenderingEngine/GLDrawGeometricalModel/GLDrawQuadrilateral.cpp'],
		LIBS=env['LIBS']+['yade-base','Quadrilateral','yade-opengl']),
	env.SharedLibrary('GLDrawFacet',['RenderingEngine/GLDrawGeometricalModel/GLDrawFacet.cpp']
	    ,LIBS=env['LIBS']+['yade-opengl','Facet']),
	env.SharedLibrary('GLDrawInteractingBox',['RenderingEngine/GLDrawInteractingGeometry/GLDrawInteractingBox.cpp'],
		LIBS=env['LIBS']+['yade-base','InteractingBox','yade-opengl']),
	env.SharedLibrary('GLDrawInteractingSphere',['RenderingEngine/GLDrawInteractingGeometry/GLDrawInteractingSphere.cpp'],
		LIBS=env['LIBS']+['yade-base','InteractingSphere','yade-opengl'],),
         env.SharedLibrary('GLDrawBssSweptSphereLineSegment',['RenderingEngine/GLDrawInteractingGeometry/GLDrawBssSweptSphereLineSegment.cpp'],
                LIBS=env['LIBS']+['yade-base','BssSweptSphereLineSegment','yade-opengl']),               
	env.SharedLibrary('GLDrawMetaInteractingGeometry',['RenderingEngine/GLDrawInteractingGeometry/GLDrawMetaInteractingGeometry.cpp'],
		LIBS=env['LIBS']+['yade-opengl']),
	env.SharedLibrary('GLDrawInteractingFacet',['RenderingEngine/GLDrawInteractingGeometry/GLDrawInteractingFacet.cpp']
	    ,LIBS=env['LIBS']+['yade-opengl','InteractingFacet']),
	env.SharedLibrary('GLDrawBoxShadowVolume',['RenderingEngine/GLDrawShadowVolume/GLDrawBoxShadowVolume.cpp'],
		LIBS=env['LIBS']+['Box','ParticleParameters','yade-opengl','RigidBodyParameters']),
	env.SharedLibrary('GLDrawSphereShadowVolume',['RenderingEngine/GLDrawShadowVolume/GLDrawSphereShadowVolume.cpp'],
		LIBS=env['LIBS']+['Sphere','ParticleParameters','yade-opengl']),
	env.SharedLibrary('GLDrawClosestFeatures',['RenderingEngine/GLDrawInteractionGeometry/GLDrawClosestFeatures.cpp'],
		LIBS=env['LIBS']+['yade-base','ClosestFeatures','yade-opengl']),
	env.SharedLibrary('GLDrawNormalInteraction',['RenderingEngine/GLDrawInteractionPhysics/GLDrawNormalInteraction.cpp'],LIBS=env['LIBS']+['yade-opengl','NormalShearInteractions']),
	env.SharedLibrary('GLDrawParticleState',['RenderingEngine/GLDrawState/GLDrawParticleState.cpp'],
		LIBS=env['LIBS']+['yade-base','ParticleParameters','yade-opengl']),
	env.SharedLibrary('GLDrawRigidBodyState',['RenderingEngine/GLDrawState/GLDrawRigidBodyState.cpp'],
		LIBS=env['LIBS']+['ParticleParameters','RigidBodyParameters','GLDrawParticleState','yade-opengl']),
	env.SharedLibrary('OpenGLRenderingEngine',['RenderingEngine/OpenGLRenderingEngine/OpenGLRenderingEngine.cpp'],
		LIBS=env['LIBS']+['yade-base',  'glut', 'GLU', 'GL']),
                
# In the following, there is maybe too much defined LIBS (?)
        env.SharedLibrary('BshTube',['DataClass/GeometricalModel/BshTube.cpp'],
                LIBS=env['LIBS']+['BoundingVolumeMetaEngine','InteractingBox',]),
        env.SharedLibrary('BssSweptSphereLineSegment',['DataClass/InteractingGeometry/BssSweptSphereLineSegment.cpp'],
                LIBS=env['LIBS']+['BoundingVolumeMetaEngine','InteractingBox','AABB','Box',]),
        env.SharedLibrary('BcpConnection',['DataClass/PhysicalParameters/BcpConnection.cpp'],
                LIBS=env['LIBS']+['SimpleViscoelasticBodyParameters']),
        env.SharedLibrary('ef2_BshTube_BssSweptSphereLineSegment_makeBssSweptSphereLineSegment',
                        ['Engine/EngineUnit/ef2_BshTube_BssSweptSphereLineSegment_makeBssSweptSphereLineSegment.cpp'],
                LIBS=env['LIBS']+['BoundingVolumeMetaEngine','InteractingBox','AABB','Box','BshTube','BcpConnection','BssSweptSphereLineSegment']),
        env.SharedLibrary('ef2_BssSweptSphereLineSegment_AABB_makeAABB',
                        ['Engine/EngineUnit/ef2_BssSweptSphereLineSegment_AABB_makeAABB.cpp'],
                LIBS=env['LIBS']+['BoundingVolumeMetaEngine','AABB','BssSweptSphereLineSegment']),
        
        env.SharedLibrary('GLDrawTube',['RenderingEngine/GLDrawGeometricalModel/GLDrawTube.cpp'],
                        LIBS=env['LIBS']+['yade-base','BshTube','yade-opengl']),
                
])

