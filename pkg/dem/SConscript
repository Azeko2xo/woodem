Import('*')
env.Install('$PREFIX/lib/yade$SUFFIX/pkg-dem',[

	env.SharedLibrary('InteractingMyTetrahedron',
		['DataClass/InteractingGeometry/InteractingMyTetrahedron.cpp']),

	env.SharedLibrary('BodyMacroParameters',
		['DataClass/PhysicalParameters/BodyMacroParameters.cpp'],
		LIBS=env['LIBS']+['RigidBodyParameters',
			'ElasticBodyParameters',
			'yade-serialization',
			'yade-base',
			'yade-multimethods']),

	env.SharedLibrary('SpheresContactGeometry',
		['DataClass/InteractionGeometry/SpheresContactGeometry.cpp'],
		LIBS=env['LIBS']+['yade-serialization','yade-base']),

	env.SharedLibrary('SDECLinkGeometry',
		['DataClass/InteractionGeometry/SDECLinkGeometry.cpp'],
		LIBS=env['LIBS']+['yade-serialization','yade-base']),

	env.SharedLibrary('InteractionOfMyTetrahedron',
		['DataClass/InteractionGeometry/InteractionOfMyTetrahedron.cpp'],
		LIBS=env['LIBS']+['yade-serialization', 'yade-base']),

	env.SharedLibrary('ElasticContactInteraction',
		['DataClass/InteractionPhysics/ElasticContactInteraction.cpp'],
		LIBS=env['LIBS']+['SimpleElasticInteraction']),

	env.SharedLibrary('SDECLinkPhysics',
		['DataClass/InteractionPhysics/SDECLinkPhysics.cpp']),

	env.SharedLibrary('GlobalStiffness',
		['DataClass/PhysicalAction/GlobalStiffness.cpp'],
		LIBS=env['LIBS']+['yade-base']),

	env.SharedLibrary('MacroMicroElasticRelationships',
		['Engine/EngineUnit/MacroMicroElasticRelationships.cpp'],
		LIBS=env['LIBS']+['SDECLinkPhysics',
			'SDECLinkGeometry',
			'ElasticContactInteraction',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'RigidBodyParameters',
			'ParticleParameters',
			'InteractionPhysicsMetaEngine']),

	env.SharedLibrary('SimpleElasticRelationships',
		['Engine/EngineUnit/SimpleElasticRelationships.cpp'],
		LIBS=env['LIBS']+['SDECLinkPhysics',
			'SDECLinkGeometry',
			'ElasticContactInteraction',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'RigidBodyParameters',
			'ParticleParameters',
			'InteractionPhysicsMetaEngine']),

	env.SharedLibrary('InteractingBox2InteractingSphere4SpheresContactGeometry',
		['Engine/EngineUnit/InteractingBox2InteractingSphere4SpheresContactGeometry.cpp'],
		LIBS=env['LIBS']+['SpheresContactGeometry',
			'InteractionGeometryMetaEngine',
			'yade-base',
			'yade-multimethods',
			'InteractingSphere',
			'InteractingBox']),

	env.SharedLibrary('InteractingSphere2InteractingSphere4SpheresContactGeometry',
		['Engine/EngineUnit/InteractingSphere2InteractingSphere4SpheresContactGeometry.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'SpheresContactGeometry',
			'InteractionGeometryMetaEngine',
			'yade-base',
			'yade-multimethods',
			'InteractingSphere']),

	env.SharedLibrary('InteractingMyTetrahedron2AABB',
		['Engine/EngineUnit/InteractingMyTetrahedron2AABB.cpp'],
		LIBS=env['LIBS']+['BoundingVolumeMetaEngine',
			'InteractingMyTetrahedron',
			'AABB',
			'yade-base']),

	env.SharedLibrary('InteractingMyTetrahedron2InteractingMyTetrahedron4InteractionOfMyTetrahedron',
		['Engine/EngineUnit/InteractingMyTetrahedron2InteractingMyTetrahedron4InteractionOfMyTetrahedron.cpp'],
		LIBS=env['LIBS']+['InteractionOfMyTetrahedron',
			'InteractionGeometryMetaEngine',
			'yade-base',
			'yade-multimethods',
			'InteractingMyTetrahedron',
			'yade-base']),

	env.SharedLibrary('InteractingMyTetrahedron2InteractingBox4InteractionOfMyTetrahedron',
		['Engine/EngineUnit/InteractingMyTetrahedron2InteractingBox4InteractionOfMyTetrahedron.cpp'],
		LIBS=env['LIBS']+['InteractionOfMyTetrahedron',
			'InteractionGeometryMetaEngine',
			'InteractingBox2InteractingSphere4SpheresContactGeometry',
			'InteractingBox',
			'InteractingSphere',
			'SpheresContactGeometry',
			'yade-base',
			'yade-multimethods',
			'InteractingMyTetrahedron']),

	env.SharedLibrary('Tetrahedron2InteractingMyTetrahedron',
		['Engine/EngineUnit/Tetrahedron2InteractingMyTetrahedron.cpp'],
		LIBS=env['LIBS']+['InteractingMyTetrahedron', 'InteractingGeometryMetaEngine', 'Tetrahedron']),

	env.SharedLibrary('ElasticCohesiveLaw',
		['Engine/StandAloneEngine/ElasticCohesiveLaw.cpp'],
		LIBS=env['LIBS']+['SDECLinkPhysics',
			'ElasticContactInteraction',
			'SDECLinkGeometry',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'yade-base',
			'yade-multimethods',
			'Force',
			'Momentum',
			'Sphere',
			'RigidBodyParameters']),

	env.SharedLibrary('ElasticContactLaw',
		['Engine/StandAloneEngine/ElasticContactLaw.cpp'],
		LIBS=env['LIBS']+['SDECLinkPhysics',
			'ElasticContactInteraction',
			'SDECLinkGeometry',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'yade-serialization',
			'yade-base',
			
			'yade-multimethods',
			'Force',
			'Momentum',
			'Sphere',
			'RigidBodyParameters']),

	env.SharedLibrary('MyTetrahedronLaw',
		['Engine/StandAloneEngine/MyTetrahedronLaw.cpp'],
		LIBS=env['LIBS']+['ElasticContactInteraction',
			'SimpleElasticInteraction',
			'InteractionOfMyTetrahedron',
			'ElasticBodyParameters',
			'yade-serialization',
			'yade-base',
			'yade-multimethods',
			'Force',
			'Momentum',
			'Sphere',
			'RigidBodyParameters']),

	env.SharedLibrary('ElasticCriterionTimeStepper',
		['Engine/StandAloneEngine/ElasticCriterionTimeStepper.cpp'],
		LIBS=env['LIBS']+['ElasticContactInteraction',
			'SpheresContactGeometry',
			'MacroMicroElasticRelationships',
			'Sphere']),

	env.SharedLibrary('AveragePositionRecorder',
		['Engine/StandAloneEngine/AveragePositionRecorder.cpp'],
		LIBS=env['LIBS']+['RigidBodyParameters']),

	env.SharedLibrary('ForceRecorder',
		['Engine/StandAloneEngine/ForceRecorder.cpp'],
		LIBS=env['LIBS']+['RigidBodyParameters', 'Force']),

	env.SharedLibrary('PositionOrientationRecorder',
		['Engine/StandAloneEngine/PositionOrientationRecorder.cpp'],
		LIBS=env['LIBS']+['RigidBodyParameters']),

	env.SharedLibrary('VelocityRecorder',
		['Engine/StandAloneEngine/VelocityRecorder.cpp'],
		LIBS=env['LIBS']+['ParticleParameters']),

	env.SharedLibrary('GlobalStiffnessCounter',
		['Engine/StandAloneEngine/GlobalStiffnessCounter.cpp'],
		LIBS=env['LIBS']+['SDECLinkPhysics',
			'ElasticContactInteraction',
			'SDECLinkGeometry',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'yade-serialization',
			'yade-base',		
			'yade-multimethods',
			'Force',
			'Momentum',
			'Sphere',
			'RigidBodyParameters',
			'GlobalStiffness']),

	env.SharedLibrary('GlobalStiffnessTimeStepper',
		['Engine/StandAloneEngine/GlobalStiffnessTimeStepper.cpp'],
		LIBS=env['LIBS']+['yade-base',
			
			'ElasticContactInteraction',
			'SpheresContactGeometry',
			'MacroMicroElasticRelationships',
			'Sphere',
			'GlobalStiffness']),

	env.SharedLibrary('GeometricalModelForceColorizer',
		['Engine/StandAloneEngine/GeometricalModelForceColorizer.cpp'],
		LIBS=env['LIBS']+['RigidBodyParameters', 'Force']),

	env.SharedLibrary('ResultantForceEngine',
		['Engine/DeusExMachina/ResultantForceEngine.cpp'],
		LIBS=env['LIBS']+['yade-factory',
			'yade-base',		
			'Force',
			'ParticleParameters',
			'GlobalStiffness']),

	env.SharedLibrary('TriaxialStressController',
		['Engine/DeusExMachina/TriaxialStressController.cpp'],
		LIBS=env['LIBS']+['yade-factory',
			'yade-base',
			'Force',
			'ParticleParameters',
			'ElasticContactInteraction',
			'InteractingSphere',
			'SpheresContactGeometry',
			'Sphere']),

	env.SharedLibrary('TriaxialCompressionEngine',
		['Engine/DeusExMachina/TriaxialCompressionEngine.cpp'],
		LIBS=env['LIBS']+['yade-factory',
			'yade-base',
			'Force',
			'ParticleParameters',
			'ElasticContactInteraction',
			'TriaxialStressController']),

	env.SharedLibrary('GLDrawInteractingMyTetrahedron',
		['RenderingEngine/GLDrawInteractingMyTetrahedron/GLDrawInteractingMyTetrahedron.cpp'],
		LIBS=env['LIBS']+['InteractingMyTetrahedron', 'yade-opengl']),

	env.SharedLibrary('GLDrawSpheresContactGeometry',
		['RenderingEngine/GLDrawSpheresContactGeometry/GLDrawSpheresContactGeometry.cpp'],
		LIBS=env['LIBS']+['SpheresContactGeometry',
			'ElasticContactInteraction',
			'SimpleElasticInteraction',
			'yade-opengl']),

	env.SharedLibrary('GLDrawSDECLinkGeometry',
		['RenderingEngine/GLDrawSDECLinkGeometry/GLDrawSDECLinkGeometry.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'SDECLinkPhysics',
			'SimpleElasticInteraction',
			'yade-opengl']),

	env.SharedLibrary('Funnel',
		['PreProcessor/Funnel.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'ElasticContactLaw',
			'MacroMicroElasticRelationships',
			'ElasticCriterionTimeStepper',
			'PhysicalActionVectorVector',
			'InteractionVecSet',
			'BodyRedirectionVector',
			'InteractingSphere',
			'InteractingBox',
			'CundallNonViscousMomentumDamping',
			'CundallNonViscousForceDamping',
			'MetaInteractingGeometry',
			'GravityEngine',
			'yade-serialization',
			'yade-base',
			
			'PhysicalActionContainerInitializer',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'Box',
			'Sphere',
			'AABB',
			'PersistentSAPCollider',
			'ParticleParameters',
			'SAPCollider',
			'MetaInteractingGeometry2AABB',
			'yade-multimethods']),

	env.SharedLibrary('SDECImpactTest',
		['PreProcessor/SDECImpactTest.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'ElasticContactLaw',
			'AveragePositionRecorder',
			'VelocityRecorder',
			'ForceRecorder',
			'MacroMicroElasticRelationships',
			'ElasticCriterionTimeStepper',
			'PhysicalActionVectorVector',
			'InteractionVecSet',
			'BodyRedirectionVector',
			'yade-base',
			'InteractingSphere',
			'InteractingBox',
			'CundallNonViscousMomentumDamping',
			'CundallNonViscousForceDamping',
			'MetaInteractingGeometry',
			'GravityEngine',
			'yade-serialization',
			'PhysicalActionContainerInitializer',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'yade-multimethods',
			'Box',
			'Sphere',
			'AABB',
			'PersistentSAPCollider',
			'SAPCollider',
			'MetaInteractingGeometry2AABB']),

	env.SharedLibrary('SDECLinkedSpheres',
		['PreProcessor/SDECLinkedSpheres.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'ElasticContactLaw',
			'ElasticCohesiveLaw',
			'MacroMicroElasticRelationships',
			'ElasticCriterionTimeStepper',
			'PhysicalActionVectorVector',
			'InteractionVecSet',
			'BodyRedirectionVector',
			'InteractingSphere',
			'InteractingBox',
			'CundallNonViscousMomentumDamping',
			'CundallNonViscousForceDamping',
			'MetaInteractingGeometry',
			'GravityEngine',
			'yade-serialization',
			'yade-base',
			
			'PhysicalActionContainerInitializer',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'Box',
			'Sphere',
			'AABB',
			'PersistentSAPCollider',
			'ParticleParameters',
			'SAPCollider',
			'MetaInteractingGeometry2AABB',
			'yade-multimethods']),

	env.SharedLibrary('SDECSpheresPlane',
		['PreProcessor/SDECSpheresPlane.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'ElasticContactLaw',
			'MacroMicroElasticRelationships',
			'ElasticCriterionTimeStepper',
			'PositionOrientationRecorder',
			'PhysicalActionVectorVector',
			'InteractionVecSet',
			'BodyRedirectionVector',
			'InteractingSphere',
			'InteractingBox',
			'CundallNonViscousMomentumDamping',
			'CundallNonViscousForceDamping',
			'MetaInteractingGeometry',
			'GravityEngine',
			'yade-serialization',
			'yade-base',
			'PhysicalActionContainerInitializer',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'Box',
			'Sphere',
			'AABB',
			'PersistentSAPCollider',
			'ParticleParameters',
			'SAPCollider',
			'MetaInteractingGeometry2AABB',
			'yade-multimethods']),

	env.SharedLibrary('SDECMovingWall',
		['PreProcessor/SDECMovingWall.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'ElasticContactLaw',
			'MacroMicroElasticRelationships',
			'ElasticCriterionTimeStepper',
			'PositionOrientationRecorder',
			'PhysicalActionVectorVector',
			'InteractionVecSet',
			'BodyRedirectionVector',
			'InteractingSphere',
			'InteractingBox',
			'CundallNonViscousMomentumDamping',
			'CundallNonViscousForceDamping',
			'MetaInteractingGeometry',
			'GravityEngine',
			'TranslationEngine',
			'yade-serialization',
			'yade-base',
			'PhysicalActionContainerInitializer',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'Box',
			'Sphere',
			'AABB',
			'PersistentSAPCollider',
			'ParticleParameters',
			'SAPCollider',
			'MetaInteractingGeometry2AABB',
			'yade-multimethods']),

	env.SharedLibrary('TetrahedronsTest',
		['PreProcessor/TetrahedronsTest.cpp'],
		LIBS=env['LIBS']+['MyTetrahedronLaw',
			'MacroMicroElasticRelationships',
			'ElasticCriterionTimeStepper',
			'PhysicalActionVectorVector',
			'InteractionVecSet',
			'BodyRedirectionVector',
			'InteractingMyTetrahedron',
			'InteractingSphere',
			'InteractingBox',
			'CundallNonViscousMomentumDamping',
			'CundallNonViscousForceDamping',
			'MetaInteractingGeometry',
			'GravityEngine',
			'PhysicalActionContainerInitializer',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractingGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'Box',
			'Sphere',
			'AABB',
			'PersistentSAPCollider',
			'ParticleParameters',
			'SAPCollider',
			'MetaInteractingGeometry2AABB',
			'Tetrahedron',
			'yade-serialization',
			'yade-base',
			'yade-multimethods']),

	env.SharedLibrary('TriaxialTest',
		['PreProcessor/TriaxialTest.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'ElasticContactLaw',
			'AveragePositionRecorder',
			'VelocityRecorder',
			'ForceRecorder',
			'SimpleElasticRelationships',
			'ElasticCriterionTimeStepper',
			'PhysicalActionVectorVector',
			'InteractionVecSet',
			'InteractionHashMap',
			'BodyRedirectionVector',
			'InteractingSphere',
			'InteractingBox',
			'CundallNonViscousMomentumDamping',
			'CundallNonViscousForceDamping',
			'MetaInteractingGeometry',
			'GravityEngine',
			'yade-serialization',
			'PhysicalActionContainerInitializer',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'yade-multimethods',
			'Box',
			'Sphere',
			'AABB',
			'PersistentSAPCollider',
			'SAPCollider',
			'MetaInteractingGeometry2AABB',
			'GlobalStiffness',
			'GlobalStiffnessCounter',
			'ResultantForceEngine',
			'TriaxialStressController',
			'TriaxialCompressionEngine',
			'GlobalStiffnessTimeStepper',
			'yade-base',
			'WallStressRecorder',
			'PositionOrientationRecorder']),

	env.SharedLibrary('ThreePointBending',
		['PreProcessor/ThreePointBending.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'ElasticContactLaw',
			'ElasticCohesiveLaw',
			'MacroMicroElasticRelationships',
			'ElasticCriterionTimeStepper',
			'PhysicalActionVectorVector',
			'InteractionVecSet',
			'BodyRedirectionVector',
			'InteractingSphere',
			'InteractingBox',
			'CundallNonViscousMomentumDamping',
			'CundallNonViscousForceDamping',
			'MetaInteractingGeometry',
			'GravityEngine',
			'yade-serialization',
			'yade-base',
			
			'PhysicalActionContainerInitializer',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'Box',
			'Sphere',
			'AABB',
			'PersistentSAPCollider',
			'ParticleParameters',
			'SAPCollider',
			'MetaInteractingGeometry2AABB',
			'yade-multimethods',
			'TranslationEngine']),


env.SharedLibrary('WallStressRecorder',
		['Engine/DeusExMachina/WallStressRecorder.cpp'],
		LIBS=env['LIBS']+['ParticleParameters',
			'ElasticContactInteraction',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'Force',
			'TriaxialStressController',
			'TriaxialCompressionEngine',
			'Sphere',
			'ElasticContactLaw']),

env.SharedLibrary('CapillaryPressureEngine',
		['Engine/DeusExMachina/CapillaryPressureEngine.cpp'],
		LIBS=env['LIBS']+['CapillaryCohesiveLaw']),


env.SharedLibrary('CapillaryStressRecorder',
		['Engine/DeusExMachina/CapillaryStressRecorder.cpp'],
		LIBS=env['LIBS']+['ParticleParameters',
			'ElasticContactInteraction',
			'CapillaryParameters',
			'Force',
			'CapillaryCohesiveLaw']),

env.SharedLibrary('TriaxialTestWater',
		['PreProcessor/TriaxialTestWater.cpp'],
		LIBS=env['LIBS']+Split('''SDECLinkGeometry
        ElasticContactLaw
        CapillaryCohesiveLaw
        AveragePositionRecorder
        VelocityRecorder
        ForceRecorder
        WallStressRecorder
        CapillaryStressRecorder
        ContactStressRecorder
        MacroMicroElasticRelationships
        ElasticCriterionTimeStepper
        PhysicalActionVectorVector
        InteractionVecSet
	InteractionHashMap
        BodyRedirectionVector
        InteractingSphere
        InteractingBox
        CundallNonViscousMomentumDamping
        CundallNonViscousForceDamping
        MetaInteractingGeometry
        GravityEngine
        yade-serialization
        PhysicalActionContainerInitializer
        PhysicalActionContainerReseter
        InteractionGeometryMetaEngine
        InteractionPhysicsMetaEngine
        PhysicalActionApplier
        PhysicalParametersMetaEngine
        BoundingVolumeMetaEngine
        yade-multimethods
        Box
        Sphere
        AABB
        PersistentSAPCollider
        SAPCollider
        MetaInteractingGeometry2AABB
	GlobalStiffness
	GlobalStiffnessCounter
	ResultantForceEngine
	TriaxialStressController
	MacroMicroElasticRelationshipsWater
	TriaxialCompressionEngine
	GlobalStiffnessTimeStepper''')),




env.SharedLibrary('ContactStressRecorder',
		['Engine/DeusExMachina/ContactStressRecorder.cpp'],
		LIBS=env['LIBS']+['ParticleParameters',
			'ElasticContactInteraction',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'Force',
			'TriaxialStressController',
			'TriaxialCompressionEngine',
			'Sphere',
			'ElasticContactLaw',
			'CapillaryCohesiveLaw']),

env.SharedLibrary('CapillaryCohesiveLaw',
		['Engine/StandAloneEngine/CapillaryCohesiveLaw.cpp'],
		LIBS=env['LIBS']+['CapillaryParameters',
			'ElasticContactInteraction',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'Force',
			'Momentum',
			'RigidBodyParameters',
			'Sphere',
			'ElasticContactLaw']),

env.SharedLibrary('CapillaryParameters',
		['DataClass/InteractionPhysics/CapillaryParameters.cpp'],
		LIBS=env['LIBS']+['ElasticContactInteraction']),

env.SharedLibrary('InteractingSphere2InteractingSphere4SpheresContactGeometryWater',
		['Engine/EngineUnit/InteractingSphere2InteractingSphere4SpheresContactGeometryWater.cpp'],
		LIBS=env['LIBS']+['SpheresContactGeometry',
			'InteractionGeometryMetaEngine',
			'InteractingSphere' ]),

env.SharedLibrary('InteractingBox2InteractingSphere4SpheresContactGeometryWater',
		['Engine/EngineUnit/InteractingBox2InteractingSphere4SpheresContactGeometryWater.cpp'],
		LIBS=env['LIBS']+['SpheresContactGeometry',
			'InteractionGeometryMetaEngine',
			'InteractingSphere',
			'InteractingBox' ]),

env.SharedLibrary('MacroMicroElasticRelationshipsWater',
		['Engine/EngineUnit/MacroMicroElasticRelationshipsWater.cpp'],
		LIBS=env['LIBS']+['SDECLinkPhysics',
			'SDECLinkGeometry',
			'ElasticContactInteraction',
			'SpheresContactGeometry',
			'BodyMacroParameters',
			'RigidBodyParameters',
			'ParticleParameters',
			'InteractionPhysicsMetaEngine',
			'CapillaryParameters']),

env.SharedLibrary('InteractingSphere2AABBwater',
		['Engine/EngineUnit/InteractingSphere2AABBwater.cpp'],
		LIBS=env['LIBS']+['InteractingSphere', 'AABB', 'BoundingVolumeMetaEngine']),






])

