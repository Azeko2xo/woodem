# vim: set filetype=python :

Import('*')

if 'YADE_OPENGL' in env['CPPDEFINES']:
	env.Install('$PREFIX/lib/yade$SUFFIX/pkg-snow',[
		env.SharedLibrary('Ef1_IstSnowLayersContact_glDraw',
			['RenderingEngine/Ef1_IstSnowLayersContact_glDraw.cpp'],
			LIBS=env['LIBS']+['SpheresContactGeometry','ElasticContactInteraction','yade-opengl','IstSnowLayersContact',
			'BshSnowGrain','BssSnowGrain','$QGLVIEWER_LIB']),
		env.SharedLibrary('Ef1_BssSnowGrain_glDraw',['RenderingEngine/Ef1_BssSnowGrain_glDraw.cpp'],
			LIBS=env['LIBS']+['BshSnowGrain','yade-opengl','yade-base','BssSnowGrain','GLDrawInteractingSphere','$QGLVIEWER_LIB']),
		env.SharedLibrary('Ef1_BshSnowGrain_glDraw',['RenderingEngine/Ef1_BshSnowGrain_glDraw.cpp'],
			LIBS=env['LIBS']+['BshSnowGrain','yade-opengl','yade-base','$QGLVIEWER_LIB']),
		env.SharedLibrary('SnowVoxelsLoader',
			['PreProcessor/SnowVoxelsLoader.cpp',
			'PreProcessor/Voxel/DataSurface.cpp',
			'PreProcessor/Voxel/DataVoxel.cpp',
			'PreProcessor/Voxel/GrainSurface.cpp',
			'PreProcessor/Voxel/SafeVectors3.cpp',
			'PreProcessor/Voxel/VoxelEnvelope.cpp',
			'PreProcessor/Voxel/Config.cpp'],
			LIBS=env['LIBS']+['boost_serialization','boost_program_options']+['SDECLinkGeometry',
				'CohesiveFrictionalContactLaw',
				'AveragePositionRecorder',
				'BshSnowGrain',
				'BssSnowGrain',
				'VelocityRecorder',
				'Ef2_InteractingBox_BssSnowGrain_makeIstSnowLayersContact',
				'Ef2_BssSnowGrain_BssSnowGrain_makeIstSnowLayersContact',
				'Ef2_InteractingBox_BssSnowGrain_makeSpheresContactGeometry',
				'Ef2_BssSnowGrain_BssSnowGrain_makeSpheresContactGeometry',
				'ForceRecorder',
				'CohesiveFrictionalRelationships',
				'ElasticCriterionTimeStepper',
				'InteractingSphere',
				'InteractingBox',
				'InteractingSphere2InteractingSphere4SpheresContactGeometry',
				'InteractingBox2InteractingSphere4SpheresContactGeometry',
				'ElawSnowLayersDeformation',
				'CundallNonViscousDamping',
				'CundallNonViscousDamping',
				'MetaInteractingGeometry',
				'GravityEngines',
				'yade-serialization',
				'PhysicalActionContainerReseter',
				'InteractionGeometryMetaEngine',
				'InteractionPhysicsMetaEngine',
				'PhysicalActionApplier',
				'PhysicalParametersMetaEngine',
				'BoundingVolumeMetaEngine',
				'yade-multimethods',
				'Box',
				'Sphere',
				'AABB',
				'DistantPersistentSAPCollider',
				'MetaInteractingGeometry2AABB',
				'TriaxialStressController',
				'TriaxialCompressionEngine',
				'GlobalStiffnessTimeStepper',
				'yade-base',
				'Shop',
				'TriaxialStateRecorder',
				'PositionOrientationRecorder',
				'HydraulicForceEngine']),
	])


env.Install('$PREFIX/lib/yade$SUFFIX/pkg-snow',[


	env.SharedLibrary('IstSnowLayersContact',
		['DataClass/IstSnowLayersContact.cpp'],
		LIBS=env['LIBS']+['yade-serialization','yade-base','SpheresContactGeometry']),

	env.SharedLibrary('Ef2_InteractingBox_BssSnowGrain_makeIstSnowLayersContact',
	['Engine/Ef2_InteractingBox_BssSnowGrain_makeIstSnowLayersContact.cpp'],
		LIBS=env['LIBS']+['BshSnowGrain','yade-base',
		'BssSnowGrain','InteractingBox','IstSnowLayersContact',
		'Ef2_BssSnowGrain_BssSnowGrain_makeIstSnowLayersContact','Ef2_InteractingBox_BssSnowGrain_makeSpheresContactGeometry']),
	
	env.SharedLibrary('Ef2_BssSnowGrain_BssSnowGrain_makeIstSnowLayersContact',
	['Engine/Ef2_BssSnowGrain_BssSnowGrain_makeIstSnowLayersContact.cpp'],
		LIBS=env['LIBS']+['BshSnowGrain','yade-base','IstSnowLayersContact',
		'BssSnowGrain','InteractingSphere','Ef2_BssSnowGrain_BssSnowGrain_makeSpheresContactGeometry']),

	env.SharedLibrary('Ef2_InteractingBox_BssSnowGrain_makeSpheresContactGeometry',
	['Engine/Ef2_InteractingBox_BssSnowGrain_makeSpheresContactGeometry.cpp'],
		LIBS=env['LIBS']+['BshSnowGrain','yade-base',
		'BssSnowGrain','InteractingBox','InteractingBox2InteractingSphere4SpheresContactGeometry']),
	
	env.SharedLibrary('Ef2_BssSnowGrain_BssSnowGrain_makeSpheresContactGeometry',
	['Engine/Ef2_BssSnowGrain_BssSnowGrain_makeSpheresContactGeometry.cpp'],
		LIBS=env['LIBS']+['BshSnowGrain','yade-base',
		'BssSnowGrain','InteractingSphere','InteractingSphere2InteractingSphere4SpheresContactGeometry']),

	env.SharedLibrary('Ef2_BssSnowGrain_AABB_makeAABB',['Engine/Ef2_BssSnowGrain_AABB_makeAABB.cpp'],
		LIBS=env['LIBS']+['BoundingVolumeMetaEngine','InteractingSphere','BssSnowGrain','AABB']),
	
	env.SharedLibrary('BshSnowGrain',['DataClass/BshSnowGrain.cpp'],LIBS=['boost_serialization','yade-base']),
	env.SharedLibrary('BssSnowGrain',['DataClass/BssSnowGrain.cpp'],LIBS=['boost_serialization','yade-base','BshSnowGrain',
		'InteractingSphere']),

	env.SharedLibrary('ElawSnowLayersDeformation',
		['Engine/ElawSnowLayersDeformation.cpp'],
		LIBS=env['LIBS']+['SDECLinkPhysics',
			'CohesiveFrictionalContactInteraction',
			'SDECLinkGeometry',
			'SpheresContactGeometry',
			'CohesiveFrictionalBodyParameters',
			'yade-serialization',
			'yade-base',
			'BssSnowGrain',
			'BshSnowGrain',
			'yade-multimethods',
			'Sphere',
			'RigidBodyParameters']),


	env.SharedLibrary('SnowCreepTest',
		['PreProcessor/SnowCreepTest.cpp'],
		LIBS=env['LIBS']+['SDECLinkGeometry',
			'CohesiveFrictionalContactLaw',
			'AveragePositionRecorder',
			'VelocityRecorder',
			'ForceRecorder',
			'CohesiveFrictionalRelationships',
			'ElasticCriterionTimeStepper',
			'InteractingSphere',
			'InteractingBox',
			'InteractingSphere2InteractingSphere4SpheresContactGeometry',
			'InteractingBox2InteractingSphere4SpheresContactGeometry',
			'CundallNonViscousDamping',
			'CundallNonViscousDamping',
			'MetaInteractingGeometry',
			'GravityEngines',
			'yade-serialization',
			'PhysicalActionContainerReseter',
			'InteractionGeometryMetaEngine',
			'InteractionPhysicsMetaEngine',
			'PhysicalActionApplier',
			'PhysicalParametersMetaEngine',
			'BoundingVolumeMetaEngine',
			'yade-multimethods',
			'Box',
			'Sphere',
			'ElawSnowLayersDeformation',
			'AABB',
			'DistantPersistentSAPCollider',
			'MetaInteractingGeometry2AABB',
			'TriaxialStressController',
			'TriaxialCompressionEngine',
			'GlobalStiffnessTimeStepper',
			'yade-base',
			'Shop',
			'TriaxialStateRecorder',
			'PositionOrientationRecorder',
			'HydraulicForceEngine'])
])

