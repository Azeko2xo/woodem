This thin wrapper created using py++ wraps Vector2, Vector3 and Quaternion classes of Wm3
(with real numbers, i.e. Vector2r, Vector3r, Quaternionr).

* Matrix2 and Matrix3 are not wrapped (although they could be) as they are not used much in yade
  (use numpy.Matrix if you need them in pure python code).
* X(), Y(), Z(), W() methods are not supported, use the [] indexing to acces/update elements.
* Methods taking or returning unwrapped types (like Quaternion().ToRotationMatrix()) are not
  wrapped either.
* This wrapper only works for typeof(Real)==typeof(double)

The following files are generated by py++, but included so that you don't have to install py++:
__call_policies.pypp.hpp, __convenience.pypp.hpp, miniWm3Wrap.cpp

After generating, fix absolute include path for miniWm3Wrap-toExpose.hpp in miniWm3Wrap.cpp manually (can be probably automatized in some way inside py++: TODO)

