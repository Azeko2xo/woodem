# vim: set filetype=python :
Import('*')
import os.path 

if 'EMBED_PYTHON' in env['CPPDEFINES']:
	env.Install('$PREFIX/lib/yade$SUFFIX/py/yade',[
		env.SharedLibrary('_eudoxos',['_eudoxos.cpp'],SHLIBPREFIX='',CXXFLAGS=env['CXXFLAGS']+([] if not os.path.exists('../../brefcom-mm.hh') else ['-include','../brefcom-mm.hh']),LIBS=env['LIBS']+['Shop','ConcretePM']),
		env.SharedLibrary('log',['log.cpp'],SHLIBPREFIX=''),
		env.SharedLibrary('_utils',['_utils.cpp'],SHLIBPREFIX='',LIBS=env['LIBS']+['Shop','ConcretePM']),
		env.SharedLibrary('_packPredicates',['_packPredicates.cpp'],SHLIBPREFIX='',
			# link to the symlink to the python module (created in lib/SConstruct; see explanation there)
			LIBS=env['LIBS']+(['_gts__python-module'] if 'GTS' in env['features'] else []),
			),
		env.SharedLibrary('_packSpheres',['_packSpheres.cpp'],SHLIBPREFIX='',LIBS=env['LIBS']+['Shop']),
		env.SharedLibrary('_packObb',['_packObb.cpp'],SHLIBPREFIX=''),
		env.File('utils.py'),
		env.File('eudoxos.py'),
		env.File('plot.py'),
		env.File('linterpolation.py'),
		env.File('timing.py'),
		env.File('pack.py'),
		env.SharedLibrary('wrapper',['yadeWrapper/yadeWrapper.cpp'],SHLIBPREFIX='',LIBS=env['LIBS']+['XMLFormatManager','yade-factory','yade-serialization','Shop','BoundingVolumeMetaEngine','GeometricalModelMetaEngine','InteractingGeometryMetaEngine','InteractionGeometryMetaEngine','InteractionPhysicsMetaEngine','PhysicalParametersMetaEngine','ConstitutiveLawDispatcher','InteractionDispatchers','STLImporter','ParallelEngine','Clump'],),
		env.SharedLibrary('_customConverters',['yadeWrapper/customConverters.cpp'],SHLIBPREFIX='',LIBS=env['LIBS']+['boost_python_indexing_suite_v2'])
	])

	# 3rd party modules:
	# ==================
	env.Install('$PREFIX/lib/yade$SUFFIX/py',[
		env.SharedLibrary('miniWm3Wrap',['miniWm3Wrap/miniWm3Wrap.cpp'],SHLIBPREFIX='',CPPPATH=env['CPPPATH']+['../lib/'])
	])






