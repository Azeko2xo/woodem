# syntax: python
Import('*')

pyMain='$PREFIX/bin/yade$SUFFIX_NODEBUG'
main=env.ScanReplace('main/main.py.in')
batch=env.ScanReplace('main/yade-batch.in')
env.AlwaysBuild(main)
env.AlwaysBuild(batch)
env.InstallAs(pyMain,main)
env.InstallAs(pyMain+'-batch',batch)
env.AddPostAction(pyMain,Chmod(pyMain,0755))
env.AddPostAction(pyMain+'-batch',Chmod(pyMain+'-batch',0755))
## for --rebuild
if 'execCheck' in env and env['execCheck']!=env.subst(pyMain):
	raise RuntimeError('execCheck option (%s) does not match what is about to be installed (%s)'%(env['execCheck'],env.subst(pyMain)))

env.Install('$PREFIX/lib/yade$SUFFIX/py/yade',[
	env.SharedLibrary('boot',['main/pyboot.cpp'],SHLIBPREFIX='',LIBS=env['LIBS']+['yade-support','core'])
])

# env.InstallAs('$PREFIX/bin/yade$SUFFIX-cxx',env.Program('yade',['main/main.cpp'],LIBS=env['LIBS']+['yade-support','core'],CPPDEFINES=env['CPPDEFINES']+[('YADE_VERSION','\\"'+env['version']+'\\"'),]))
## remove old executable
## might be removed in the future
import os.path, os

env.Install('$PREFIX/lib/yade$SUFFIX/lib',[
	env.SharedLibrary('core',
		env.Combine('core.cpp',[
			'Body.cpp',
			'BodyContainer.cpp',
			'Bound.cpp',
			'Cell.cpp',
			'PartialEngine.cpp',
			'Engine.cpp',
			'FileGenerator.cpp',
			'FrontEnd.cpp',
			'Interaction.cpp',
			'InteractionContainer.cpp',
			'GroupRelationData.cpp',
			'Material.cpp',
			'Scene.cpp',
			'Dispatcher.cpp',
			'Omega.cpp',
			'Shape.cpp',
			'SimulationFlow.cpp',
			'State.cpp',
			'ThreadRunner.cpp',
			'ThreadWorker.cpp',
			'TimeStepper.cpp',
			'corePlugins.cpp'			
			]
			),
		LIBS=env['LIBS']+[
			'yade-support',
			'rt', # realtime lib, for clock_gettime 
			]+
			(['yade-opengl'] if 'opengl' in env['features'] else [])
			,
	)
])
