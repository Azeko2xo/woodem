Import('*')
env.InstallAs(['$PREFIX/bin/yade$SUFFIX'],[
	env.Program('yade',
		env.Combine('core.cpp',['Body.cpp',
			'BodyContainer.cpp',
			'BoundingVolume.cpp',
			'Collider.cpp',
			'DeusExMachina.cpp',
			'FileGenerator.cpp',
			'FrontEnd.cpp',
			'GeometricalModel.cpp',
			'InteractingGeometry.cpp',
			'Interaction.cpp',
			'InteractionContainer.cpp',
			'GroupRelationData.cpp',
			'MetaBody.cpp',
			'MetaEngine.cpp',
			'NullGUI.cpp',
			'Omega.cpp',
			'PhysicalParameters.cpp',
			'Preferences.cpp',
			'SimulationFlow.cpp',
			'StandAloneSimulator.cpp',
			'ThreadRunner.cpp',
			'ThreadWorker.cpp',
			'TimeStepper.cpp',
			'yade.cpp',
			'containers/BodyRedirectionVector.cpp',
			'containers/BodyAssocVector.cpp',
			'containers/InteractionHashMap.cpp',
			'containers/InteractionVecMap.cpp',
			]),
		LIBS=env['LIBS']+[
			'yade-base',
			'yade-serialization',
			'yade-factory',
			'yade-multimethods',
			'yade-computational-geometry',
			'sqlite3x',
			'XMLFormatManager',
			'miniWm3',
			'STLImporter',
			'rt', # realtime lib, for clock_gettime 
			]+
			['$QGLVIEWER_LIB','yade-opengl'] if 'YADE_OPENGL' in env['CPPDEFINES'] else [],
		CPPDEFINES=env['CPPDEFINES']+[('YADE_VERSION','\\"'+env['realVersion']+'\\"'),]
		)
])
