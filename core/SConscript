# syntax: python
Import('*')

pyMain='$PREFIX/bin/yade$SUFFIX'
main=env.ScanReplace('main/main.py.in')
multi=env.ScanReplace('main/yade-multi.in')
env.AlwaysBuild(main)
env.AlwaysBuild(multi)
env.InstallAs(pyMain,main)
env.InstallAs(pyMain+'-multi',multi)
env.AddPostAction(pyMain,Chmod(pyMain,0755))
env.AddPostAction(pyMain+'-multi',Chmod(pyMain+'-multi',0755))

env.Install('$PREFIX/lib/yade$SUFFIX/py/yade',[
	env.SharedLibrary('boot',['main/pyboot.cpp'],SHLIBPREFIX='',LIBS=env['LIBS']+['yade-support','core'])
])

env.InstallAs('$PREFIX/bin/yade$SUFFIX-cxx',env.Program('yade',['main/main.cpp'],LIBS=env['LIBS']+['yade-support','core'],CPPDEFINES=env['CPPDEFINES']+[('YADE_VERSION','\\"'+env['version']+'\\"'),]))

env.Install('$PREFIX/lib/yade$SUFFIX/lib',[
	env.SharedLibrary('core',
		env.Combine('core.cpp',[
			'Body.cpp',
			'BodyContainer.cpp',
			'Bound.cpp',
			'Collider.cpp',
			'PartialEngine.cpp',
			'FileGenerator.cpp',
			'FrontEnd.cpp',
			'GeometricalModel.cpp',
			'Shape.cpp',
			'Interaction.cpp',
			'InteractionContainer.cpp',
			'GroupRelationData.cpp',
			'Material.cpp',
			'Scene.cpp',
			'Dispatcher.cpp',
			'NullGUI.cpp',
			'Omega.cpp',
			'SimulationFlow.cpp',
			'State.cpp',
			'ThreadRunner.cpp',
			'ThreadWorker.cpp',
			'TimeStepper.cpp',
			'containers/BodyVector.cpp',
			'containers/InteractionVecMap.cpp',

			
			]
			+(['PhysicalParameters.cpp'] if 'physpar' in env['features'] else [])
			),
		LIBS=env['LIBS']+[
			'yade-support',
			'miniWm3',
			'rt', # realtime lib, for clock_gettime 
			]+
			(['$QGLVIEWER_LIB','yade-opengl'] if 'YADE_OPENGL' in env['CPPDEFINES'] else []),
	)
])
